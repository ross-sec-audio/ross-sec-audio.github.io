[ { "title": "InfoSec Best Practice - An Unhelpful Term", "url": "/posts/InfoSec-Best-Practice-An-Unhelpful-Term/", "categories": "", "tags": "infosec", "date": "2023-10-04 00:00:00 +0100", "snippet": "Best PracticeThroughout my career in InfoSec, I must have heard the term ‚ÄúInformation Security best practice‚Äù thousands of times. I didn‚Äôt think too much about it until recently, waving it off as a heuristic way to describe how something is ‚Äúappropriately secured‚Äù, or ‚Äúsecured in line with an industry‚Äôs expectations‚Äù.The term bothered me and I knew some colleagues who had a distaste for it, but I didn‚Äôt fully understand the issue. I‚Äôve since learned some things which I think are worth sharing.This short post will outline the ways in which this term can impair critical thinking and hampers inclusivity in our industry.Losses in Critical Thinking‚ÄúBest practice‚Äù infers a single, most correct way of doing a particular thing. This doesn‚Äôt make a lot of sense in information security.There is no ‚Äúbest‚Äù.All identified information or cyber security risks and threats will be specific to each organisation, based on their assets, their asset configurations, the data being processed by those assets, and how they end up using all that stuff.This means that for any given risk, the resulting treatment or remediation plan should consider these contextual elements. Many remediation plans might look the same (e.g., deploy the vendor‚Äôs patch to address the vulnerability), but their implementation will look very different in each organisation, due to that organisation‚Äôs unique environment.I used the term ‚Äúappropriately secured‚Äù earlier on purpose, as it infers that context-specific risks are addressed through the implementation of commensurate security controls, which are fit for their purpose.Each security problem will have its own organisation-specific and contextually aware ‚Äúappropriate‚Äù controls, but these controls cannot be collated and aggregated into the book of ‚Äúbest‚Äù security, for all to digest and implement in the exact same way.‚ÄúBest Practice‚Äù infers that security practitioners can just look at a textbook and recommend standard and potentially useless solutions for identified risks and issues.You can try that if you want and to be honest, if you do you‚Äôll probably still perform well in your infosec career, and no one will call you out for regurgitating textbook answers to problems. But you won‚Äôt create much value.A belief that there is such thing as ‚ÄúInformation Security best practice‚Äù, removes an information security practitioner‚Äôs need to think critically about the challenges or problems their organisation are facing.Non-Inclusive Language &amp;amp; IdeasIn linguistic anthropology there is a well-regarded hypothesis called the Sapir‚ÄìWhorf hypothesis. It proffers that the structure and content of a language determines a native speaker‚Äôs perception and categorization of their experience. In other words, the language that we use on a daily basis, and its underlying meaning and etymology, can and will have an influence on how we view and frame the world around us.The point above on the lack of critical thinking, in relation to this term, was included as a standalone point, but also to frame the idea that the belief in ‚Äúbest practice‚Äù, and the use of this term promotes a potentially harmful way of thinking about the world around us. It promotes that there is only one right way to do something and a million wrong ways.‚ÄúBest practice‚Äù infers a singular correct approach to each problem.This leaves no space for differing perspectives, approaches, and insights.In a middle-aged, white, and cis-male dominated industry, we risk excluding innovative and novel ways to address common and challenging security problems, through the exclusion of the approaches and people who will deliver that innovation.We shouldn‚Äôt be promoting only one means to be secure. Instead, we should be inclusively looking for interesting and diverse new ways to improve upon existing practices.Improving equality, diversity, and inclusion is not just the ethically justified thing to do (although that should be enough of a reason to do anything), it will also improve our industry‚Äôs approach to problem-solving, innovation, and the delivery of secure processes and technology.What to doTo conclude, the term ‚Äúinformation security best practice‚Äù, while invasive in our industry, can be dangerous.We should kill it with fire.Long live ‚Äúgood practices‚Äù." }, { "title": "A Rant about DevSecOps", "url": "/posts/DevSecOPs-Rant/", "categories": "", "tags": "infosec, vulnerabilities, assets, devops, devsecops", "date": "2023-02-27 00:00:00 +0000", "snippet": "Scene settingOver the last few years, I‚Äôve witnessed many organisations express pretty negative views and misplaced ideas about DevOps and Agile, while sometimes using them as excuses to sidestep process gates and governance.In response, I‚Äôve often tried to explain the benefits and specific uses of DevOps and Agile practices, and attempted to correct those who abuse DevOps and Agile terms to avoid other good practices. Sometimes I‚Äôve been able to help, and sometimes it fell on deaf ears.This short blog is me continuing to try to help. It‚Äôs about how the InfoSec community often misunderstands the underlying principles and premises of DevOps, Agile, and subsequently DevSecOps.Lovely intentionsThe InfoSec community are mostly a lovely bunch. Good craic like. But I think we‚Äôve got a problem with pushing solutions that provide little value to the organisations we work with.Some good examples of this include the lengthy and somewhat useless third-party/supplier assessment questionnaires that are often required for Third Party Risk Management programmes, or the out-of-date and draconian compliance requirements of certain prescriptive security standards (‚Ä¶PCI-DSS cough üëÄ).I think the InfoSec community have a similar issue with DevSecOps.When I first heard about DevSecOps, the term thrown about was ‚ÄúShift Left‚Äù. This term actually means quite a lot in DevOps, but in the context of the conversations I was having, it was about setting up automated Static Analysis Security Testing (SAST) and Dynamic Analysis Security Testing (DAST) in development and delivery pipelines, so vulnerability identification happens early on in that lifecycle. For more info on Vulnerability &amp;amp; Security Testing see this other blog I‚Äôve written.Vulnerability Management in 4 StagesAnd that was basically it. DevSecOps = Don‚Äôt rely on Penetration Tests to find exploitable vulnerabilities at the last minute before a release.NopeWhen I later went on to learn the principles of DevOps and Agile through the Phoenix Project, Clean Agile, and the DevOps Handbook, I was a bit shocked. The three ways and other principles were lost to most implementations and understandings of DevSecOps (At least in my own anecdotal experience).If you search the term DevSecOps today, you‚Äôll be presented with hundreds of sites and blogs, all explaining it at a high level. But only a tiny wee proportion of these discuss anything other than shifting left through automated / early security testing and the adoption of DevSecOps tools.We as an industry have been pushing this kind of tool based DevSecOps, while missing some important parts of the story.Principles, AND technologyI believe that this is because many of us have overlooked the original drivers for the creation of Agile and DevOps practices.Agile ways of working were primarily a response to the challenges of infrequent and complex code deployments, along with the difficulty of estimating effort in Software Development work in general, due to inherent unknowns and complexities.DevOps practices were a response to Development and Operations teams commonly not being able to or willing to work well together.The result of the latter was not a list of new technologies, although that did come later to better serve newly adopted principles. Instead, DevOps proposed ways for these two teams to work together effectively.Reductively put, this boiled down to the ‚Äú3 Ways‚Äù: Maintain flow in systems. Amplify feedback loops. Promote continuous improvement through learning and experimentation.When I dove into these tenants, I found lots of other fun ideas, such as: Limiting work in progress (this should be thought to babies) The theory of constraints Identifying the four types of work and handling each accordingly Getting incident management right Getting asset management right Getting change management rightThose last two make me chuckle‚Ä¶Then I find myself rubbing my temples in despair.All these principles and practices were developed to help Dev and Ops teams play nice. They‚Äôve each assisted me as an InfoSec defender to work in more helpful ways with other teams. This is key to successfully protecting an organisation. For example, if you find a scary vulnerability in a product or component, at the end of the day you‚Äôve got to convince the maintainer of that asset to prioritise fixing the vulnerability. Tools for mutual and amicable collaboration don‚Äôt just help get the job done, but they also promote a friendly working environment.So many InfoSec teams I see today, across a lot of different industries, cannot play nice with other teams. Lots have implemented automated SAST, SCA, DAST and IAST into pipelines, but as soon as the long list of findings appears, all too often, that team turns into the ‚ÄúYou must fix this vulnerability by this deadline‚Äù team. Sigh.We‚Äôve missed the point." }, { "title": "Vulnerability Management in 4 Stages", "url": "/posts/Vulnerability-Management-in-4-Stages/", "categories": "", "tags": "infosec, vulnerabilities, assets", "date": "2022-06-07 00:00:00 +0100", "snippet": "What is Vulnerability Management? Well, running a periodic Nessus scan on some of your organisation‚Äôs stuff ain‚Äôt it.That‚Äôs because it‚Äôs a full lifecycle of tools, team collaboration and processes, including: Periodic/continuous scanning of all your organisation‚Äôs assets, using various tools Informed measurement and prioritisation of findings from these tools The remediation of those findings through collaboration with other teams The verification that those remediation actions worked Extra Bonus Stage - Doing it all again because it‚Äôs a continuous virtuous cycleWithout each of these steps, you‚Äôll end up with lots of work and a false sense of security.Vulnerability Management CycleThis blog post outlines each of these steps and the overarching need for empathy for these programmes to succeed.CaveatWhile I‚Äôve some experience in setting up and running Vulnerability Management programmes, I‚Äôm not an expert and generally don‚Äôt like that term. If I‚Äôve made any mistakes or omitted anything important I‚Äôd love to know. I‚Äôm keen to continually learn.CoverageThis is where I harp on about the importance of IT Asset Management as the foundation for all other InfoSec functions.If you don‚Äôt have clear visibility of all your assets and how they‚Äôre being used by your staff and customers, you‚Äôll struggle to secure them.This should include your organisation‚Äôs: Endpoint devices Mobile devices Servers Infrastructure components Code repositories Data centres 3rd party vendors Internal processes The list goes on‚Ä¶The same principle applies to Vulnerability Management. If you‚Äôre only scanning a portion of your assets, you‚Äôll get a false sense of security when a tool or scanner reports that you only have n number of critical vulnerabilities.For example, if you have 200 assets, scan 20 of them and as a result identify 2 vulnerabilities that might seem ok. But you‚Äôre sampling here, so in actuality you could have 20 vulnerabilities in total with 18 going unidentified.Getting 100% coverage is hard though. It requires a mature IT Asset Management foundation and multiple Vulnerability Management solutions, each fulfilling a different function.You will unfortunately (most likely) need different Vulnerability Management solutions for different use cases, as each will find vulnerabilities in different parts of your organisation.These tools and methods can either be used as a part of the SDLC, to ensure that a deployed product is secure by design, or as an operational ‚Äúbusiness as usual‚Äù service, run by your security assurance team, to find and fix vulnerabilities in deployed assets.Examples of vulnerability solution types include: Static Analysis Security Testing (SAST) solutions What they do: These search for vulnerabilities in your code base. When they&#39;re used: SAST is often used during the early stages of the software development lifecycle (SDLC) and/or through integrating it as an automated step in a deployment pipeline. Examples: OWASP includes a good list of SAST tools here: https://owasp.org/www-community/Source_Code_Analysis_Tools Dynamic Analysis Security Testing (DAST) solutions What they do: These search for vulnerabilities in your applications during runtime (i.e. DAST doesn‚Äôt scan source code. Instead it dynamically checks running applications for vulnerabilities). When they&#39;re used: As DAST is performed at runtime, it is used later in the SDLC (further right) and is often performed as an automated step in a deployment pipeline. Examples: OWASP ZAP is a full-featured free and open-source DAST tool. Software Composition Analysis (SCA) solutions What they do: These search for vulnerabilities in open-source packages and components that are included or imported into your applications (think Log4J). When they&#39;re used: SCA is often used during the early stages of the software development lifecycle (SDLC) Examples: Github &amp;amp; Snyk both include easy to use SCA features. Network Vulnerability Scanning solutions What they do: These scan networks and connected devices/servers for vulnerabilities. When they&#39;re used: Network Vulnerability scanners are often used as an operational, ‚Äúbusiness as usual‚Äù service run by an Information Security Assurance team. Examples: OpenVAS is an example of a flexible open-source vulnerability scanner. Nessus, Qualys and Acunetix also fit into this category. Coverage challenges due to the COVID-19 Pandemic: Traditional solutions to identify vulnerabilities on corporate assets (devices, servers and infrastructure) are no longer fit for purpose due to the large amount of remote working, triggered by COVID-19. These solutions relied on assets being connected to the corporate network. Corporate VPN solutions help, but with so many SaaS products using local or single sign-on (SSO) authentication, users are no longer incentivised to continually connect to these VPNs. This results in solutions like Nessus Professional only finding vulnerabilities on a small portion of connected devices. In response to this, the industry is promoting agent-based solutions which can call back to a central vulnerability management service regardless of location or network connection. Interactive Application Security Testing (IAST) solutions What they do: Through installed agents, these test applications at runtime while analysing the relevant source code to identify more vulnerabilities with a lower rate of false positives. When they&#39;re used: IAST generally takes place during the test/QA stage of the software development life cycle (SDLC) More Information: DZone has a great article going into further detail about IAST here. Penetration (pen.) Testing What they do: This is an authorised security attack exercise where a pen-tester attempts to actively find and exploit vulnerabilities in an application. When they&#39;re used: This occurs in the late stages of the SDLC, or on production systems/applications, as a final test that mimics real world attack methods. Only performing Pen. Testing? For so many reasons, pen. testing shouldn‚Äôt be performed in place of all the other methods mentioned above. Firstly, only performing pen. testing will result in those testers finding obvious ‚Äúlow hanging fruit‚Äù vulnerabilities. If you caught and addressed these earlier on in the SDLC you would get a lot more value from a pen test as you‚Äôll make them work harder. Also, only performing pen. testing gives management and leadership a false sense of cost savings. Sure, you don‚Äôt have to spend time and money performing multiple other security tests, but when a pen. tester finds tonnes of vulnerabilities right before an application is meant to go live, it‚Äôs going to cause significant delays which could have been better handled in the earlier stages of the SDLC. I think the trick is to understand the assets your organisation already has in place and what they‚Äôre planning on developing/procuring in the near future. Then you can begin to explore various options to implement Vulnerability Management tooling or processes that fit your organisation‚Äôs threats.Ideally, you‚Äôd want to scan everything all the time, but that‚Äôs not always very easy. Let‚Äôs explore why.Continuous scanning of everythingContinuously scanning can be really challenging. It requires a lot of oversight and operational management, but that caveat doesn‚Äôt change the goal: You want to continually have an up to date picture of the security posture of all your assets. With that full picture, you can prioritise effectively to reduce your organisation‚Äôs risk exposure, by addressing business critical, high value and high risk vulnerabilities first.One thing worth mentioning here is to keep in mind the Load implications of running vulnerability scanning tools continuously. Testing is key here as you‚Äôll need to identify what you can do without breaking your organisation‚Äôs technology and processes. Some scans can eat up a lot of bandwidth and resources. It‚Äôs recommended that you chat with relevant technical leads, so you don‚Äôt end up DoSing your own systems.My recommendation here is to have a friendly and empathetic chat with your architecture, development, test and operations teams to figure out what will and won‚Äôt work for them.This could include discussions about tooling that works for those teams, while also achieving adequate coverage and an appropriate schedule. Ideally, you don‚Äôt want to ask a team to use tools they hate, so instead you could ask them to try a few and see what works for everyone.Continuous scanning all the time, or every once in a while?It‚Äôs generally not recommended to only scan your assets once a year because you‚Äôll be unaware of all newly introduced vulnerabilities throughout that year and will end up with a long list of things to fix when that scan comes around. But sometimes a periodic scan is the most pragmatic approach. If you can get that period to occur often, like once a month, you‚Äôll get a lot of the same benefits realised through continuous scanning.Firstly you‚Äôll get the obvious benefit of having good visibility as your assets change over time, but you‚Äôll also keep your architecture, development, test and operations teams happy (after the initial wave of vulnerabilities you find after the first scan üò≠).Instead of sharing a list of thousands of significant vulnerabilities once a year, you can continually work with teams and support them to address findings on an on-going basis. This allows them to bake remediation, configuration updates and patch management practices into their technical backlogs, business as usual workloads and capacity management.Measurement &amp;amp; PrioritisationAfter you run some scans, you‚Äôll realise that you‚Äôve identified a significant number of vulnerabilities. While this can be massively worrying and panic inducing, it‚Äôs pretty common to have a tonne of findings when you start looking. Handling this requires some planning to identify which vulnerabilities should be remediated and addressed first.CVSS scores are incredibly useful in helping organisations to understand and prioritise their vulnerabilities. They are derived from various metrics which can be used to help understand a given score‚Äôs relevance in your own context. ‚ÄúVulnerability Management doesn‚Äôt really work without a mature IT Asset Management programme in place. You can‚Äôt prioritise based on CVSS measurements alone.‚ÄùEach of the CVSS metrics below are useful in understanding how a given vulnerability might affect your organisation.The following is a list of metrics used in CVSS v3.1:Base Score Metrics Metric Score Attack Vector (AV) Network (AV:N), Adjacent Network (AV:A), Local (AV:L), Physical (AV:P) Attack Complexity (AC) Low (AC:L), High (AC:H) Privileges Required (PR) None (PR:N), Low (PR:L), High (PR:H) User Interaction (UI) None (UI:N), Required (UI:R) Scope (S) Unchanged (S:U), Changed (S:C) Impact Metrics Metric Score Confidentiality Impact (C) None (C:N), Low (C:L), High (C:H) Integrity Impact (I) None (I:N), Low (I:L), High (I:H) Availability Impact (A) None (A:N), Low (A:L), High (A:H) Temporal Score Metrics Metric Score Exploit Code Maturity (E) Not Defined (E:X), Unproven that exploit exists (E:U), Proof of concept code (E:P), Functional exploit exists (E:F), High (E:H) Remediation Level (RL) Not Defined (RL:X), Official fix (RL:O), Temporary fix (RL:T), Workaround (RL:W), Unavailable (RL:U) Report Confidence (RC) Not Defined (RC:X), Unknown (RC:U), Reasonable (RC:R), Confirmed (RC:C) Environmental Metrics Metric Score Confidentiality Requirement (CR) None (C:N), Low (C:L), Medium (CR:M), High (C:H) Integrity Requirement (IR) None (I:N), Low (I:L), Medium (IR:M), High (I:H) Availability Requirement (AR) None (A:N), Low (A:L), Medium (AR:M), High (A:H) CVSS v3.1 includes Environmental Metrics which enable your organisation to customise the CVSS score depending on the importance of the affected IT asset. This allows your organisation to take the business criticality, value and risk associated with a given asset into account when prioritising identified vulnerabilities.CVSS ShortcomingsHowever, this requires you to already have an agreed understanding of the business criticality, value and risk of all your assets. The Environmental Metrics of CVSS v3.1 only scratch the surface here. They won‚Äôt present you with clear business justifications why a given vulnerability needs to be addressed urgently, due to the criticality (No‚Ä¶this does not equal Availability), value and risk of that asset.In other words, Vulnerability Management doesn‚Äôt really work without a mature IT Asset Management programme in place. You can‚Äôt prioritise based on CVSS measurements alone.CVSS v3.1 SpecificationNIST - CVSS v3 CalculatorCVSS Score Example:CVSS v3.1 Vector: AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:L/E:F/RL:O/RC:C/CR:H/IR:H/AR:H/MAV:X/MAC:X/MPR:L/MUI:X/MS:X/MC:X/MI:X/MA:XRemediation &amp;amp; the need for Engagement &amp;amp; EmpathyWhen a vulnerability is discovered on an asset, InfoSec teams, 99% of the time, are not the people doing the remediation work (patching/upgrading/reconfiguring). This means they need to work closely with architecture, development, test and operations teams in the hopes that they will fix the issues you‚Äôve found.But we‚Äôve the same issue here that helped to spawn the DevOps movement: Just as development and operations teams previously didn‚Äôt work well together, InfoSec teams often continue to lack empathy and don‚Äôt collaborate well with other teams. We are sometimes the ‚Äúno‚Äù team and in relation to identified vulnerabilities, we often recommend ‚Äúpatching‚Äù as our one size fits all treatment plan. Lots of the talk and work in and around DevSecOps has been about tooling and integration, but it lacks the collaborative and empathetic successes of the DevOps movement.This is commonly due to a lack of understanding. For those InfoSec professionals who‚Äôve never worked as developers, testers, system administrators or in an operations team, their only interaction with patching and upgrading will have been through end-user, commercially available software updates.Here, all the behind the scenes development, configuration work, testing and change advisory boards and documentation (the list goes on) is completed and all you need to do is press the big update button. Even when running a simple server, with a single function and with little integration with its surrounding environment, patching is not a simple task that can occur without care and consideration. It comes with its own IT operational and availability (remember that old chestnut from the CIA triad?) risks that InfoSec teams need to demonstrate empathy and understanding towards. Often a patch or update doesn‚Äôt exist yet and the only option is a configuration change or the implementation of compensating security controls, while accepting the residual risk. And using compensating controls will always introduce complexity and an operational cost that will need to be managed.InfoSec teams should also understand that architecture, development, test and operations teams will already have long product and technical backlogs. Adding something new and expecting it to trump all the other stuff isn‚Äôt grounded in reality.Instead, we need to build bridges with these teams through shared understanding. Not just through rephrasing InfoSec jargon, but through learning their craft, challenges, and values and adapting our tooling/processes/people to fit their needs. We need pragmatism in our interactions and expectations of these teams. We should support and stand up for these teams in our organisations for all the hard work they do.Verification and Continuous ImprovementWhile this is a big topic, it can be boiled down to a few simple ideas.After the development, test and operations teams have remediated a vulnerability, it‚Äôs the InfoSec team‚Äôs responsibility to then verify that it‚Äôs been fixed.The easiest way to do this is to re-run the original test or scan.Ideally, this should be done as an embedded part of the vulnerability remediation process, but rechecking for vulnerabilities should also occur through the continuous scanning of all your assets (I think that dead horse is thoroughly flogged now).If a fix hasn‚Äôt worked and your re-scan still shows an active vulnerability, there‚Äôs probably a good reason and we should continue to work empathetically with other teams to resolve this.ConclusionThe key takeaways from this blog are that: Comprehensive coverage through asset management is necessary for vulnerability assessment to be meaningful Continuous vulnerability scanning comes with its own challenges and it is important to find the right cadence while acknowledging both your risk appetite and your teams‚Äô capacity for remediation Having a transparent methodology for measurement and prioritisation of vulnerabilities can help communication and engagement with other teams Building a good working relationship with the teams you are engaged with is fundamental so you can have an open dialogue to find the best solution for remediation, be that patching or otherwise. Architecture, development, test and operations teams are friends and should be treated with respect for helping to fix the issues that you‚Äôve found. Don‚Äôt be mean Vulnerability analysis should be reflexive - it is important to analyse your assumptions, the process and the methodology so you‚Äôre not missing key risksGo forth and be friendly üòÅ" }, { "title": "InfoSec Risk Management - Benefits &amp; Common Pitfalls", "url": "/posts/Risk-Management-Explained/", "categories": "", "tags": "infosec, risk management", "date": "2021-12-31 00:00:00 +0000", "snippet": " How Information Security (InfoSec) Risk Management can practically improve the security posture of your organisation if implemented correctly.IntroductionThe purpose of this article is to clearly describe how InfoSec Risk Management can tangibly improve the security posture of your organisation while outlining some common pitfalls and mistakes.TL;DRRisk Management provides methodologies to consistently measure your organisation‚Äôs exposure to threats and vulnerabilities. This allows your organisation to prioritise your InfoSec projects based on urgency and their potential benefits. This allows InfoSec teams to create adaptive and informed strategic roadmaps for the coming months or years.However, the benefits of this approach will only be realised If your organisation properly embeds Risk Management frameworks and processes into its governance structures and strategic planning If your organisation ensures that each step of your Risk Management processes include self-reflective feedback loopsRisk Management stops organisations from unnecessarily attempting to ‚Äúsecure all the things‚Äù, as security controls are only implemented when there is a risk present. The effort, cost and scope of controls will always be commensurate to their associated risk, resulting in less waste.Risk Management vs Gap Analyses vs Maturity ModelsRisk Management is only one method of developing an InfoSec strategy. There are many ways to strategise but performing gap analyses against InfoSec standards and modelling your InfoSec maturity are both common to this industry.In future posts, I might cover InfoSec maturity models and gap analysis properly, but in this post, I‚Äôm only giving a brief overview.Maturity ModelsInfoSec maturity models are useful tools to understand the current state of an organisation‚Äôs security posture, across many security controls or domains, by assigning a maturity measurement to each. Note: An Information Security Control is a measure taken to reduce an information security risk, such as breaches, theft or unauthorised access. An example of a control would be full disk encryption on an endpoint device to protect against unauthorised access.Below is an example of a maturity rating scale: Maturity Description Level 1 - Initial Undocumented. Dependency on individual knowledge and efforts. Not repeatable or scalable. Level 2 - Developing Mostly repeatable due to documentation, but not properly embedded. Level 3 - Defined Completely documented, standardised and has maintenance support. Level 4 - Managed Periodically reviews the effectiveness in place, through data collection and analysis. Level 5 - Optimising Continuous monitoring, review and improvement processes are embedded. Maturity models are particularly useful in demonstrating the security controls and domains that are lacking in an organisation.Unfortunately, maturity models have their limitations: You might think the purpose of models is to reach the highest level on the maturity scale. This assumes that improvement is linear and doesn‚Äôt need to include continuous improvement The scales described in most maturity models lack real advice on how to improve the security of each control, outside general process improvement. They‚Äôre not context-driven.Gap AnalysesInfoSec Gap Analyses are useful tools to understand the state of an organisation‚Äôs security posture by measuring its compliance against a known standard.An example of this would be to review the management clauses and Annex A controls included in ISO 27001 and check where your organisation is compliant. The output would be a percentage compliance rating, with a breakdown of security domains where the org did well or poorly.These tools are a snapshot of the current compliance posture of an organisation. So, other than obtaining 100% compliance with the given standard, which won‚Äôt take into account the context of the organisation, they don‚Äôt provide any insight into how to continually improve information security.Risk Management BasicsThe following section describes how Risk Management methodologies can address the shortcomings of Maturity Models and Gap Analyses. When Risk Management is implemented correctly it will include feedback loops at each stage of the framework, ensuring continuous improvement of the whole framework and the treatment of identified risks. When implemented incorrectly Risk Management won‚Äôt provide accurate insights and will be mostly ignored by management.To accurately explain this, I‚Äôll first outline several key Risk Management concepts and terms: Term Description Threat Any circumstance, event or actor with the potential to harm your organisation through unauthorised access, destruction, disclosure, modification of assets and/or denial of service. Vulnerability A weakness in an information system, process, internal control or implementation that could be exploited or triggered by a threat. Likelihood This is the probability that a risk will manifest through the exploitation of a vulnerability. Impact Impact is the total damage your organisation would incur if a vulnerability were exploited by a threat. Proximity Certain risks may have a window of time when they are expected to occur. The proximity describes how immediate the exploitation of a given risk is. This is different to likelihood as a risk may be expected to manifest, but it may be known that this might not happen for several months. Proximity does not increase the risk rating itself but does change the decisions around when that risk is addressed.Threats &amp;amp; Vulnerabilities are the variables that make up the perceived risk (e.g. you receive threat intelligence that a ransomware actor is actively attacking your industry using a new vulnerability that you have not yet had the chance to patch) Note: I‚Äôll write separate posts on Threat Modelling and Vulnerability Management, as each of these is a beast in its own right.Risk Measurement FormulaRisk = Impact x LikelihoodRisk Management BenefitsOften, when you‚Äôre working in InfoSec there are so many projects, reports, queries and incidents that you may feel you have little time to think strategically or to properly implement a Risk Management framework.However, if you take the time to embed Risk Management practices you‚Äôll probably find you‚Äôre able to improve your time management through the consistent prioritisation it delivers.A simple working example of this would be Organisation A, which has identified approximately 30 significant and strategic InfoSec risks. Of these 30, 5 have scored ‚ÄúVery High‚Äù in Likelihood and ‚ÄúVery High‚Äù in Impact. This score has been given due to an understanding of the probability of this risk manifesting and the negative consequences of its occurrence. Because of this understanding, you can prioritise the remediation of these 5 risks. If you are questioned about this, you already have a justification documented.This should grant you some space to address your organisation‚Äôs critical security threats and vulnerabilities, and you‚Äôll be able to justify the resource cost.The following is a list of potential benefits if Risk Management is implemented and embedded correctly: An exhaustive view of the security posture of your assets, through defined risk identification and registration methods A consistent and agreed method to describe and measure the criticality of each risk Using the above measurement provides you with a method to consistently prioritise your team‚Äôs work After agreeing on the measurements and the prioritisation of treatment, stakeholders can agree on strategic and tactical treatment plans for each identified risk. This grants your team flexible roadmaps for the coming months/years and creates accountability in your organisation through those commitments to security. When treatment plans are completed, their results are added to the existing mitigating controls of a given risk. This new mitigating control will reduce the overall risk rating and will result in a residual risk rating. This new rating is reviewed by stakeholders to agree on whether it can be accepted (i.e. ignored) or if further treatment is required. This process is continuous.Risk Methodology &amp;amp; ProcessThe following section gives an example of a recursive risk management process. The feedback loops included help to ensure your InfoSec posture continually improves. It also ensures that the process itself is under constant review and improvement through iteration.This example includes 11 steps (plus a bonus 12th step), but you could have as many or as few steps as you want.Example Risk Lifecycle1. IdentificationRisks can be identified through many sources including but not limited to: Threat Intelligence Gathering and Review Business Impact Assessments Formal Risk Assessments Maturity Modelling &amp;amp; Gap Analyses Vulnerability Management Incident &amp;amp; Change Management Responsible Disclosure from external &amp;amp; internal partiesIdentifying InfoSec risk is both a simple and complicated process. You may be able to automatically identify many significant risks off the top of your head, but how can you be sure you‚Äôve not missed anything?There are several ways you can reduce the operational risk of leaving some InfoSec risks unidentified. These can include With a list of business-critical assets, perform a triage InfoSec survey on each. The survey could include questions about how these assets are developed, tested, hosted, patched, used, maintained, decommissioned, etc. Consider your organisation‚Äôs calendar. Are there any dates, periods or events that are critical to the running of the organisation? Can you now think of any InfoSec risks that would negatively affect these dates? Review your company‚Äôs posture against a list of InfoSec domains (e.g Secure Control Framework‚Äôs List of Security Domains) and then through understanding your gaps in these areas you can identify risks relating to each. Yes, this is essentially a gap analysis with the results converted into risks. 2. DescriptionThese identified risks then need to be described consistently. The following format is an example of a consistent description method. Where relevant, briefly describe the risks and affected asset‚Äôs context If the affected asset is a website, where is it hosted? How is it accessed? etc. Briefly describe the causes of this risk This would include the threats and vulnerabilities, including their Likelihood and Proximity Briefly describe the consequences of this risk manifesting What would the operational, financial, legal and reputational impact on the organisation be? This format will ensure that: You have a clear, agreed and documented explanation of the risk. You have a documented justification for the chosen risk rating.When risks are not adequately or consistently described it can be very difficult to understand their subsequent quantitative risk rating. This is a common issue resulting in a more subjective view of risk severity.3. Initial MeasurementUsing the consistent descriptions above, you‚Äôll then need to assign quantitative ratings to each risk.The example ratings below could be used, but there are pros and cons to using less and more complex rating systems. The following ratings are easy to use but can be considered overly simple when trying to measure the severity differences of two or more similar risks. Impact - scoring from 1 to 4 (Low to Very High) Likelihood - scoring from 1 to 4 (Low to Very High) Separate Threat Ratings with the variables ‚Äúsource quality‚Äù, ‚Äúspecificity‚Äù, ‚Äúveracity‚Äù and ‚Äúproximity‚Äù can be considered here also. Risk = Impact x Likelihood (+ Threat Rating if applicable)Example Risk Rating MatrixThe above example gives us a rating between 1 and 16 with 16 being the most severe.Ratings will provide us with a consistent measurement to prioritise our risks and treatment plans.4. Description &amp;amp; Initial Rating ApprovalOnce you have described and measured your risks, they will need to be shared with relevant stakeholders in your organisation for consultation and to ensure that are formally agreed upon.This and each of the other approval steps below are governance measures that should foster accountability in your organisation.When agreements on risk severity are agreed upon and documented, your organisation will only be able to accept these, without remediation, in good faith.5. Treatment Plan CreationOnce everyone has agreed on the risk and its severity, what do you do with it?Risks can be treated in several ways. These can be categorised into: Termination - Risks and their sources are completely removed or avoided Action - Risks are reduced, mitigated and/or contained through the implementation of controls. Transfer - Risks are shared with another party (i.e. Insurance) Acceptance - Risks are accepted as falling within the organisation‚Äôs risk appetite and subsequently don‚Äôt require remediation.If a risk is described and measured adequately it is much more likely that an organisation will choose the appropriate treatment option.Treatment plans are the names of projects that action, transfer or terminate a risk. These should have owners and where appropriate they should have project managers.These should be designed collaboratively with stakeholders, who may have a greater contextual understanding of the affected assets.6. Treatment Plan ApprovalTreatment plans are shared with relevant stakeholders and are formally agreed upon.Once you have designed treatment plans for your identified risks, they will need to be formally agreed upon.Like before, this approval step should foster accountability in your organisation.7. Estimated Residual Risk ApprovalTreatment plan designs should be indicative of a reduction in risk. This estimated reduction should be identified and agreed upon. This may result in a residual risk that is not addressed by a treatment plan.This residual risk will need to be approved, by an appropriate governing board or committee to confirm that the organisation is happy with the plans and that they are happy to accept the residual risk going forward.8. Treatment Plans Started &amp;amp; Progress TrackingOnce the above approvals have been obtained, plans should be passed to their owner for delivery.Implementation of a treatment plan may not start immediately as it may be put into a team‚Äôs backlog, depending on the severity.The progress of treatment plans, their agreed deadlines and individual deliverables should be tracked, monitored and periodically reviewed. It is recommended that the InfoSec team and treatment plan owners meet periodically to discuss progress, blockers and impediments.9. Reporting &amp;amp; EscalationSecurity Reports of various levels and types should be written in agreed schedules and presented at appropriate governance boards and to key personnel.Security Reports will include key metrics including: Significant changes in the threat landscape The number of new and current risks Progress trends for treatment plans Escalations where progress is delayed or there is a blocker/impediment in place Decisions &amp;amp; approvals for the appropriate governance board/personnelThis step should foster accountability in your organisation. Without it, treatment plans could be deprioritised without approval or oversight.10. Milestones Reached in Treatment PlansWhen significant progress is made or a treatment plan is completely implemented, a description of these new InfoSec controls should be added to the Existing Controls column of the organisation‚Äôs Risk Register, for the relevant risk.These new existing mitigating controls should reduce the risk rating.Appropriate stakeholders should formally agree on the reduction of this risk rating to ensure everyone is on the same page about the significance of the progress made and the severity of the remaining risk.11. Residual Risk Re-ReviewOnce a treatment plan is completely delivered and if there is any residual risk, this should be re-reviewed.Appropriate stakeholders should confirm whether the residual risk can continue to be accepted or if it needs to be addressed and treated in another way.If it‚Äôs agreed that the residual risk can be accepted, stakeholders also need to confirm whether this acceptance is perpetual or if it‚Äôs a short term acceptance until another solution becomes available.12. Bonus 12th StepThroughout this whole process, if the state of relevant threats, vulnerabilities and assets changes then the risk descriptions, ratings and treatment plans may need to be updated accordingly.This could also change the priority of your risks and hence change the order of your treatment plans.Risk registers should not be a piece of shelf-ware that is filled out once and then only checked and updated once every quarter/year/never. They need to be continually updated and reviewed to be useful.Integration into Organisation‚Äôs Governance StructuresThe example risk process above ensures that relevant stakeholders are included in risk decisions, however, you will need to ensure that management is engaged and aware of the gravity of the decisions they make.If management is not engaged this could mean that they believe your organisation‚Äôs InfoSec risks are not an existential threat or it could mean that they don‚Äôt fully understand the risks.It is the information security team‚Äôs job to ensure that management grasps each InfoSec risk completely.That said, your management team may have a higher tolerance or appetite for risk than you. This is fairly normal but shouldn‚Äôt stop you from expressing your own measured and justified concerns.Strategic Risk ManagementIndividual risk assessments don‚Äôt often give you the high-level information needed to strategically address an organisation‚Äôs security shortfalls. This is because discrete risk assessments are often performed against individual processes, products, services, etc. An example of this would be a Data Protection Impact Assessment (DPIA) performed on a new organisational process to ensure continued compliance with GDPR (or the Data Protection Act 2018 here in the UK).Instead, I‚Äôd recommend you think about your organisation at a higher level. Consider the following and the potential information security risks associated with each: The organisation‚Äôs key assets - What are the organisation‚Äôs key processes, services, products and other assets? What are the corporate risks to these? And how does information security relate to these as corporate risks? Key calendar events - Are there any key events throughout the year that if negatively impacted would cost the organisation? If so how could these be negatively affected by security incidents? Information Security Domains - Similar to Gap Analyses and Maturity Models described above, it‚Äôs recommended to measure the organisation‚Äôs exposure to risk against a list of common InfoSec domains. The Secure Controls Framework has a great list of domains to get started with.These are just three of many perspectives you could use to help you identify your organisation‚Äôs most critical assets, and events and how they may be exposed to InfoSec risks.Using perspectives like those above can give you a basic strategic skeleton, which you can then build upon through more data and context.ConclusionIf implemented and embedded correctly, Risk Management can save time, improve consistency, help to prioritise work and can foster accountability in your organisation.While a bit of work to get going, it is worthwhile investing in these methods.However, if risk analysis is completed and registers are populated, but their results don‚Äôt inform an organisation‚Äôs strategic decision making, it‚Äôs not going to be much use to you or anyone else.If you have any questions or would like to know more about Information Security Risk Management, please don‚Äôt hesitate to get in touch" }, { "title": "Welcome to Ross-Sec-Audio", "url": "/posts/Welcome-to-Ross-Sec-Audio/", "categories": "", "tags": "welcome", "date": "2021-12-27 00:00:00 +0000", "snippet": " Introduction to this site and the blog.Hey there!I‚Äôve created this site to learn and showcase the silly things I‚Äôve learned, written, and developed.I don‚Äôt claim to be an expert on any topics covered here, so if I‚Äôve made an error or misunderstood something, please do let me know. I‚Äôd be happy to update posts as required.Mainly, I‚Äôm using this site to improve my understanding of InfoSec, Technology, Music Production, Culture, and Politics.I‚Äôm hosting this site using GitHub Pages, and it‚Äôs developed using Jekyll. This keeps things very simple through Markdown, along with a bit of CSS, HTML, and JavaScript.TopicsI‚Äôm interested in lots of stuff, but I‚Äôm planning to write about the following topics: Information Security Programming &amp;amp; Software Development Music Production Live music coding Other musings on the world (i.e. politics, social science, anthropology, etc.)Contact If you have a question, or if you‚Äôd like to collaborate on anything, please don‚Äôt hesitate to get in touch - Email" } ]
